// Simplified schema that works with Supabase's built-in user management
// This doesn't require external database connections

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Simple user profile extension (works with Supabase auth)
model UserProfile {
  id          String   @id @default(cuid())
  email       String   @unique // matches Supabase auth user email
  displayName String?
  region      String?  // store as string, not relation
  avatarUrl   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Simple contract model (no complex relationships)
model Contract {
  id          String   @id @default(cuid())
  userId      String   // Supabase user ID
  email       String   // user email for display
  category    String   // store as string
  region      String   // store as string
  priceCents  Int
  unit        String?
  quantity    Float?
  description String?
  vendorName  String?
  fileKey     String
  thumbKey    String?
  takenOn     DateTime?
  status      String   @default("PENDING") // PENDING, APPROVED, REJECTED
  createdAt   DateTime @default(now())
  
  @@index([category, region])
  @@index([status])
  @@index([priceCents])
}

// Simple review model
model Review {
  id         String   @id @default(cuid())
  contractId String
  userId     String   // Supabase user ID
  email      String   // user email for display
  rating     Int      // -1 or +1
  comment    String?
  createdAt  DateTime @default(now())
  
  @@unique([contractId, userId])
  @@index([contractId])
  @@index([userId])
}

// Simple tags
model ContractTag {
  id         String   @id @default(cuid())
  contractId String
  label      String
  
  @@index([label])
  @@index([contractId])
}
